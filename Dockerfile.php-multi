# Use ubuntu:22.04 as the base image for the builder stage
FROM ubuntu:22.04 AS builder

# Update and install necessary packages
RUN apt-get update && \
    apt-get upgrade -y && \
    DEBIAN_FRONTEND="noninteractive" apt-get install -y \
    php php-cli php-fpm php-json php-common php-mysql php-zip php-gd php-intl php-mbstring php-curl php-xml php-pear php-tidy php-soap php-bcmath php-xmlrpc \
    apache2 libapache2-mod-php wget mysql-client

# Configure PHP settings
# RUN echo "memory_limit = 256M" >> /etc/php/8.1/cli/php.ini
# RUN echo "date.timezone = UTC" >> /etc/php/8.1/cli/php.ini

COPY php.ini /etc/php/apache2/php.ini

# Set the working directory and download Drupal
WORKDIR /var/www/html
RUN wget -qO- https://ftp.drupal.org/files/projects/drupal-10.2.5.tar.gz | tar xz --strip-components=1

# Set permissions for Drupal
RUN chown -R www-data:www-data /var/www/html && \
    chmod -R 755 /var/www/html

# Use php:8.1-apache as the base image for the final stage
FROM php:8.1-apache

# Install necessary system dependencies
RUN apt-get update && \
    apt-get install -y libpng-dev libfreetype6-dev libjpeg-dev && \
    rm -rf /var/lib/apt/lists/*

# Configure and install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg && \
    docker-php-ext-install -j$(nproc) gd opcache pdo_mysql mysqli && \
    docker-php-ext-enable pdo_mysql mysqli opcache gd

# Copy necessary files from the builder stage
COPY --from=builder /var/www/html /var/www/html

# Copy the Apache configuration file
COPY apache.conf /etc/apache2/sites-available/drupal.conf

# Enable Apache modules and configure the virtual host
RUN a2enmod rewrite && \
    a2ensite drupal.conf

# Expose port 80
EXPOSE 80

# Start Apache server
CMD ["apache2ctl", "-D", "FOREGROUND"]
